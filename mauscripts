setclipboard("https://t.me/Mauscripts")
game:GetService("StarterGui"):SetCore("SendNotification",{
 Title = "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ",
 Text = "–°–∫—Ä–∏–ø—Ç –≤–∑—è—Ç —Å –¢–ì–ö Mauscripts! –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è",
 Icon = "rbxassetid://116318625324253"
})
local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/Library-ui/refs/heads/main/Redzhubui"))()
local Window = redzlib:MakeWindow({
    Title = "Grow A Garden ",
    SubTitle = "1.3",
    SaveFolder = "MausHub"
})
Window:AddMinimizeButton({
    Button = { Image = "rbxassetid://116318625324253", BackgroundTransparency = 0 },
    Corner = { CornerRadius = UDim.new(35, 1) },
})

local TabInfo = Window:MakeTab({"Info", "info"})

local updateInfoText = [[
Grow A Garden Script
Version: 1.3

List of changes - 1.3:
- Auto buy eggs
- Auto buy Cosmetics
- Added a key to the system
- Added 3 more stores
- Added settings
What will be in the next update:
+I will add a language change Ru/Eng
+I'll update it for the game
+I'll improve the interface
+I will add 5 ways to collect fruits

Thank you for using the script!
]]

TabInfo:AddButton({
    Name = "Show Update Info",
    Callback = function()
        -- –°–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç–æ–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ —Å —Ç–µ–∫—Å—Ç–æ–º
        local infoGui = Instance.new("ScreenGui")
        local frame = Instance.new("Frame")
        local textLabel = Instance.new("TextLabel")
        local closeButton = Instance.new("TextButton")

        infoGui.Name = "UpdateInfoGui"
        infoGui.Parent = game:GetService("CoreGui")

        frame.Size = UDim2.new(0, 400, 0, 300)
        frame.Position = UDim2.new(0.5, -200, 0.5, -150)
        frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        frame.BorderSizePixel = 0
        frame.Parent = infoGui

        textLabel.Size = UDim2.new(1, -20, 1, -50)
        textLabel.Position = UDim2.new(0, 10, 0, 10)
        textLabel.BackgroundTransparency = 1
        textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        textLabel.TextWrapped = true
        textLabel.TextYAlignment = Enum.TextYAlignment.Top
        textLabel.Font = Enum.Font.SourceSans
        textLabel.TextSize = 18
        textLabel.Text = updateInfoText
        textLabel.Parent = frame

        closeButton.Size = UDim2.new(0, 80, 0, 30)
        closeButton.Position = UDim2.new(1, -90, 1, -40)
        closeButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
        closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        closeButton.Text = "Close"
        closeButton.Font = Enum.Font.SourceSansBold
        closeButton.TextSize = 18
        closeButton.Parent = frame

        closeButton.MouseButton1Click:Connect(function()
            infoGui:Destroy()
        end)
    end
})

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = game:GetService("Players").LocalPlayer


local VirtualInputManager = game:GetService("VirtualInputManager")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local Tab1 = Window:MakeTab({"Auto Harvest", "play"})
local Section = Tab1:AddSection({"Main"})
local enabled = false
local selected = "harvest aura"
local gayposition = nil
local Toggle1 = Tab1:AddToggle({
    Name = "Auto Farm",
    Description = "<font color='rgb(88, 101, 242)'>Automatically harvest fruits.</font>",
    Default = false,
    Callback = function(Value)
        enabled = Value
    end
})
Tab1:AddDropdown({
    Name = "Method",
    Description = "<font color='rgb(88, 101, 242)'>Select method</font>",
    Options = {
        "harvest aura",
        "walk to fruits and harvest",
        "tp to fruits and harvest",
        "fly to fruits and harvest (üî•NEW)"
    },
    Default = "harvest aura",
    Callback = function(Value)
        selected = Value
    end
})

local function getCharacter()
    local char = player.Character or player.CharacterAdded:Wait()
    local humanoid = char:WaitForChild("Humanoid")
    local root = char:WaitForChild("HumanoidRootPart")
    return char, humanoid, root
end

local function harvest(seconds)
    local endTime = tick() + seconds
    while tick() < endTime and enabled do
        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
        task.wait(0.1)
    end
end

local function samePosition(pos, radius)
    if not lastPosition then return false end
    return (pos - lastPosition).Magnitude < radius
end

-- Farming loop
RunService.RenderStepped:Connect(function()
    if enabled and selected == "harvest aura" then
        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
    end
end)

-- Main task loop
coroutine.wrap(function()
    while task.wait(0.5) do
        if not enabled then continue end
        if not (selected == "walk to fruits and harvest" or selected == "tp to fruits and harvest" or selected == "fly to fruits and harvest") then continue end

        local farmsFolder = workspace:FindFirstChild("Farm")
        if not farmsFolder then continue end

        for _, farm in ipairs(farmsFolder:GetChildren()) do
            if not (farm:IsA("Folder") and farm.Name == "Farm") then continue end
            local important = farm:FindFirstChild("Important")
            if not important then continue end

            local data = important:FindFirstChild("Data")
            local owner = data and data:FindFirstChild("Owner")
            if not (owner and owner:IsA("StringValue") and owner.Value == player.Name) then continue end

            local plantsFolder = important:FindFirstChild("Plants_Physical")
            if not plantsFolder then continue end

            local plants = plantsFolder:GetChildren()
            if #plants == 0 then continue end

            local target = plants[math.random(1, #plants)]
            local pos
            if target:IsA("BasePart") then
                pos = target.Position
            elseif target:IsA("Model") and target.PrimaryPart then
                pos = target.PrimaryPart.Position
            end

            if not pos or samePosition(pos, 10) then continue end

            local _, humanoid, root = getCharacter()

            if selected == "walk to fruits and harvest" then
                humanoid:MoveTo(pos)
                task.wait(1)
                harvest(3)

            elseif selected == "tp to fruits and harvest" then
                root.CFrame = CFrame.new(pos + Vector3.new(0, 5, 0))
                task.wait(0.05)
                harvest(3)

            elseif selected == "fly to fruits and harvest" then
                local flySpeed = 100
                local start = root.Position
                local direction = (pos - start).Unit
                local travelTime = (pos - start).Magnitude / flySpeed
                for i = 0, travelTime, RunService.Heartbeat:Wait() do
                    if not enabled then break end
                    root.CFrame = CFrame.new(root.Position + direction * flySpeed * RunService.Heartbeat:Wait())
                end
                root.CFrame = CFrame.new(pos + Vector3.new(0, 5, 0))
                task.wait(0.05)
                harvest(3)
            end

            lastPosition = pos
            task.wait(0.7)
        end
    end
end)()

----- END AUTO FARM SCRIPT -----
local Tab10 = Window:MakeTab({"Auto Plant", "sticker"})
local Toggle1 = Tab10:AddToggle({
    Name = "Auto Plant",
    Description = "<font color='rgb(88, 101, 242)'>auto plant selected seeds</font>",
    Default = false
})

-- –ú–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ–º—è–Ω
local seedOptions = {
    "Carrot", "Strawberry", "Blueberry", "Orange Tulip",
    "Tomato", "Corn", "Daffodil", "Watermelon", "Pumpkin", 
    "Apple", "Bamboo", "Coconut", "Cactus", "Dragon Fruit", 
    "Mango", "Grape", "Mushroom", "Repper", "Cacao", "Beanstalk (new)"
}

-- –í—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–µ–º–µ–Ω–∞
shared.selectedSeeds = {}

-- –î–æ–±–∞–≤–∏–º –∫–Ω–æ–ø–∫–∏-–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ (—á–µ–∫–±–æ–∫—Å—ã)
Tab10:AddParagraph("–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–º–µ–Ω–∞", "")
for _, seed in ipairs(seedOptions) do
    Tab10:AddToggle({
        Name = seed,
        Default = false,
        Callback = function(Value)
            if Value then
                table.insert(shared.selectedSeeds, seed)
            else
                for i, v in ipairs(shared.selectedSeeds) do
                    if v == seed then
                        table.remove(shared.selectedSeeds, i)
                        break
                    end
                end
            end
        end
    })
end

-- –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local localPlayer = Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local autoPlant = false

local function equipSeed(seed)
    for _, tool in ipairs(localPlayer.Backpack:GetChildren()) do
        if tool:IsA("Tool") and tool.Name:find(seed .. " Seed") then
            tool.Parent = character
            return true
        end
    end
    return false
end

local function hasSeedEquipped(seed)
    for _, tool in ipairs(character:GetChildren()) do
        if tool:IsA("Tool") and tool.Name:find(seed .. " Seed") then
            return true
        end
    end
    return false
end

local function teleportTo(position)
    if typeof(position) == "Vector3" then
        humanoidRootPart.CFrame = CFrame.new(position + Vector3.new(0, 3, 0))
    end
end

local function getRandomPointInPart(part)
    local size = part.Size
    local pos = part.Position
    return Vector3.new(
        pos.X + (math.random() * 2 - 1) * size.X / 2,
        pos.Y,
        pos.Z + (math.random() * 2 - 1) * size.Z / 2
    )
end

local function plantSeed(position, seed)
    local plantRE = ReplicatedStorage:FindFirstChild("GameEvents") and ReplicatedStorage.GameEvents:FindFirstChild("Plant_RE")
    if plantRE then
        plantRE:FireServer(position, seed)
    end
end

local function autoPlantLoop()
    while autoPlant do
        for _, seed in ipairs(shared.selectedSeeds) do
            if hasSeedEquipped(seed) or equipSeed(seed) then
                for _, farm in ipairs(Workspace.Farm:GetChildren()) do
                    local important = farm:FindFirstChild("Important")
                    local data = important and important:FindFirstChild("Data")
                    local owner = data and data:FindFirstChild("Owner")

                    if owner and owner.Value == localPlayer.Name then
                        local plantLoc = important:FindFirstChild("Plant_Locations")
                        local canPlant = plantLoc and plantLoc:FindFirstChild("Can_Plant")

                        if canPlant then
                            local targetPos = getRandomPointInPart(canPlant)
                            teleportTo(targetPos)
                            task.wait(0.1)
                            plantSeed(targetPos, seed)
                            break
                        end
                    end
                end
            end
            task.wait(0.1)
        end
        task.wait(0.2)
    end
end

Toggle1:Callback(function(Value)
    autoPlant = Value
    if Value then
        coroutine.wrap(autoPlantLoop)()
    end
end)









local Tab52 = Window:MakeTab({"Auto Sell", "sun"})
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")
local character = player.Character or player.CharacterAdded:Wait()
character:WaitForChild("HumanoidRootPart")
local sellRemote = ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("Sell_Inventory")
local autoSellEnabled = false
local sell = 50
local isProcessing = false
local Toggle1 = Tab52:AddToggle({
    Name = "Auto Sell",
    Description = "<font color='rgb(88, 101, 242)'>Auto Sell</font>",
    Default = false 
})
Toggle1:Callback(function(Value)
    autoSellEnabled = Value
end)
Tab52:AddSlider({
    Name = "Sell if count inventory is",
    Min = 0,
    Max = 200,
    Increase = 1,
    Default = 50,
    Callback = function(Value)
        sell = Value
    end
})
task.spawn(function()
    while true do
        task.wait(0.1)
        if autoSellEnabled and not isProcessing then
            local itemCount = #backpack:GetChildren()
            if itemCount >= sell then
                isProcessing = true
                local hrp = character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    local originalCFrame = hrp.CFrame
                    hrp.CFrame = workspace.Tutorial_Points.Tutorial_Point_2.CFrame
                    task.wait(0.2)
                    sellRemote:FireServer()
                    task.wait(0.1)
                    hrp.CFrame = originalCFrame
                end
                isProcessing = false
            end
        end
    end
end)

local Tab2 = Window:MakeTab({"Auto Buy Seeds", "wand"})
local Toggle1 = Tab2:AddToggle({
    Name = "Auto Buy Carrot",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying carrot</font>",
    Default = false
})
local buying = false
Toggle1:Callback(function(Value)
    buying = Value
    task.spawn(function()
        while buying do
            local args = {
                "Carrot"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle2 = Tab2:AddToggle({
    Name = "Auto Buy Strawberry",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying strawberry</font>",
    Default = false
})
local buyingStrawberry = false
Toggle2:Callback(function(Value)
    buyingStrawberry = Value
    task.spawn(function()
        while buyingStrawberry do
            local args = {
                "Strawberry"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle3 = Tab2:AddToggle({
    Name = "Auto Buy Blueberry",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying blueberry</font>",
    Default = false
})
local buyingBlueBerry = false
Toggle3:Callback(function(Value)
    buyingBlueBerry = Value
    task.spawn(function()
        while buyingBlueBerry do
            local args = {
                "Blueberry"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle4 = Tab2:AddToggle({
    Name = "Auto Buy Orange Tulip",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying orange tulip</font>",
    Default = false
})
local buyingOrangeTulip = false
Toggle4:Callback(function(Value)
    buyingOrangeTulip = Value
    task.spawn(function()
        while buyingOrangeTulip do
            local args = {
                "Orange Tulip"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle5 = Tab2:AddToggle({
    Name = "Auto Buy Tomato",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying tomato</font>",
    Default = false
})
local buyingTomato = false
Toggle5:Callback(function(Value)
    buyingTomato = Value
    task.spawn(function()
        while buyingTomato do
            local args = {
                "Tomato"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle6 = Tab2:AddToggle({
    Name = "Auto Buy Corn",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying corn</font>",
    Default = false
})
local buyingCorn = false
Toggle6:Callback(function(Value)
    buyingCorn = Value
    task.spawn(function()
        while buyingCorn do
            local args = {
                "Corn"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle7 = Tab2:AddToggle({
    Name = "Auto Buy Daffodil",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying daffodil</font>",
    Default = false
})
local buyingDaffodil = false
Toggle7:Callback(function(Value)
    buyingDaffodil = Value
    task.spawn(function()
        while buyingDaffodil do
            local args = {
                "Daffodil"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle8 = Tab2:AddToggle({
    Name = "Auto Buy Watermelon",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying watermelon</font>",
    Default = false
})
local buyingWatermelon = false
Toggle8:Callback(function(Value)
    buyingWatermelon = Value
    task.spawn(function()
        while buyingWatermelon do
            local args = {
                "Watermelon"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle9 = Tab2:AddToggle({
    Name = "Auto Buy Pumpkin",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying pumpkin</font>",
    Default = false
})
local buyingPumpkin = false
Toggle9:Callback(function(Value)
    buyingPumpkin = Value
    task.spawn(function()
        while buyingPumpkin do
            local args = {
                "Pumpkin"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle10 = Tab2:AddToggle({
    Name = "Auto Buy Apple",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying apple</font>",
    Default = false
})
local buyingApple = false
Toggle10:Callback(function(Value)
    buyingApple = Value
    task.spawn(function()
        while buyingApple do
            local args = {
                "Apple"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle11 = Tab2:AddToggle({
    Name = "Auto Buy Bamboo",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying bamboo</font>",
    Default = false
})
local buyingBamboo = false
Toggle11:Callback(function(Value)
    buyingBamboo = Value
    task.spawn(function()
        while buyingBamboo do
            local args = {
                "Bamboo"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle12 = Tab2:AddToggle({
    Name = "Auto Buy Coconut",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying coconut</font>",
    Default = false
})
local buyingCoconut = false
Toggle12:Callback(function(Value)
    buyingCoconut = Value
    task.spawn(function()
        while buyingCoconut do
            local args = {
                "Coconut"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle14 = Tab2:AddToggle({
    Name = "Auto Buy Dragon Fruit",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying dragon fruit</font>",
    Default = false
})
local buyingDragonFruit = false
Toggle14:Callback(function(Value)
    buyingDragonFruit = Value
    task.spawn(function()
        while buyingDragonFruit do
            local args = {
                "Dragon Fruit"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle15 = Tab2:AddToggle({
    Name = "Auto Buy Mango",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying mango</font>",
    Default = false
})
local buyingMango = false
Toggle15:Callback(function(Value)
    buyingMango = Value
    task.spawn(function()
        while buyingMango do
            local args = {
                "Mango"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle16 = Tab2:AddToggle({
    Name = "Auto Buy Grape",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying grape</font>",
    Default = false
})
local buyingGrape = false
Toggle16:Callback(function(Value)
    buyingGrape = Value
    task.spawn(function()
        while buyingGrape do
            local args = {
                "Grape"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle17 = Tab2:AddToggle({
    Name = "Auto Buy Mushroom",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying mushroom</font>",
    Default = false
})
local buyingMushroom = false
Toggle17:Callback(function(Value)
    buyingMushroom = Value
    task.spawn(function()
        while buyingMushroom do
            local args = {
                "Mushroom"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle18 = Tab2:AddToggle({
    Name = "Auto Buy Repper",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying repper</font>",
    Default = false
})
local buyingRepper = false
Toggle18:Callback(function(Value)
    buyingRepper = Value
    task.spawn(function()
        while buyingRepper do
            local args = {
                "Repper"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle19 = Tab2:AddToggle({
    Name = "Auto Buy Cacao",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying cacao</font>",
    Default = false
})
local buyingCacao = false
Toggle19:Callback(function(Value)
    buyingCacao = Value
    task.spawn(function()
        while buyingCacao do
            local args = {
                "Cacao"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle20 = Tab2:AddToggle({
    Name = "Auto Buy Beanstalk (üî•New)",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying beanstalk seed</font>",
    Default = false
})
local buyingBeanstalk = false
Toggle20:Callback(function(Value)
    buyingBeanstalk = Value
    task.spawn(function()
        while buyingBeanstalk do
            local args = {
                "Beanstalk"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)

local Tab44 = Window:MakeTab({"Event [Blood moon]", "Menu"})
local Toggle555 = Tab44:AddToggle({
    Name = "Show Event Stock",
    Description = "<font color='rgb(88, 101, 242)'>you cant buy something :(</font>",
    Default = false
})
Toggle555:Callback(function(Value)
    local uishka = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("EventShop_UI")
    if uishka then
        uishka.Enabled = Value
    end
end)
local Toggle555 = Tab44:AddToggle({
    Name = "Auto Buy Mysterious Crate", 
    Description = "Auto Buy Mysterious Crate",
    Default = false 
})
local autobuy = false
Toggle555:Callback(function(Value)
    autobuy = Value
    if autobuy then
        task.spawn(function()
            while autobuy do
                local args = {
                    "Mysterious Crate"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyEventShopStock"):FireServer(unpack(args))
                task.wait(0.1)
            end
        end)
    end
end)
local ToggleNightEgg = Tab44:AddToggle({
    Name = "Auto Buy Night Egg", 
    Description = "Auto Buy Night Egg",
    Default = false 
})
local autobuy2 = false
ToggleNightEgg:Callback(function(Value)
    autobuy2 = Value
    if autobuy2 then
        task.spawn(function()
            while autobuy2 do
local args = {
    "Night Egg"
}
game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyEventShopStock"):FireServer(unpack(args))
                task.wait(0.1)
            end
        end)
    end
end)
local ToggleNightSeed = Tab44:AddToggle({
    Name = "Auto Buy Night Seed Pack", 
    Description = "Auto Buy Night Seed Pack",
    Default = false 
})
local autobuy3 = false
ToggleNightSeed:Callback(function(Value)
    autobuy3 = Value
    if autobuy3 then
        task.spawn(function()
            while autobuy3 do
                local args = {
                    "Night Seed Pack"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyEventShopStock"):FireServer(unpack(args))
                task.wait(0.1)
            end
        end)
    end
end)
local ToggleBloodBanana = Tab44:AddToggle({
    Name = "Auto Buy Blood Banana", 
    Description = "Auto Buy Blood Banana",
    Default = false 
})
local autobuy4 = false
ToggleBloodBanana:Callback(function(Value)
    autobuy4 = Value
    if autobuy4 then
        task.spawn(function()
            while autobuy4 do
                local args = {
                    "Blood Banana"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyEventShopStock"):FireServer(unpack(args))
                task.wait(0.1)
            end
        end)
    end
end)
local ToggleMoonMelon = Tab44:AddToggle({
    Name = "Auto Buy Moon Melon", 
    Description = "Auto Buy Moon Melon",
    Default = false 
})
local autobuy5 = false
ToggleMoonMelon:Callback(function(Value)
    autobuy5 = Value
    if autobuy5 then
        task.spawn(function()
            while autobuy5 do
                local args = {
                    "Moon Melon"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyEventShopStock"):FireServer(unpack(args))
                task.wait(0.1)
            end
        end)
    end
end)
local ToggleStarCaller = Tab44:AddToggle({
    Name = "Auto Buy Star Caller", 
    Description = "Auto Buy Star Caller", 
    Default = false 
})
local autobuy6 = false
ToggleStarCaller:Callback(function(Value)
    autobuy6 = Value
    if autobuy6 then
        task.spawn(function()
            while autobuy6 do
                local args = {
                    "Star Caller"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyEventShopStock"):FireServer(unpack(args))
                task.wait(0.1)
            end
        end)
    end
end)
local ToggleBloodHedgehog = Tab44:AddToggle({
    Name = "Auto Buy Blood Hedgehog", 
    Description = "Auto Buy Blood Hedgehog", 
    Default = false 
})
local autobuy7 = false
ToggleBloodHedgehog:Callback(function(Value)
    autobuy7 = Value
    if autobuy7 then
        task.spawn(function()
            while autobuy7 do
                local args = {
                    "Blood Hedgehog"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyEventShopStock"):FireServer(unpack(args))
                task.wait(0.1)
            end
        end)
    end
end)
local ToggleBloodKiwi = Tab44:AddToggle({
    Name = "Auto Buy Blood Kiwi", 
    Description = "Auto Buy Blood Kiwi", 
    Default = false 
})
local autobuy8 = false
ToggleBloodKiwi:Callback(function(Value)
    autobuy8 = Value
    if autobuy8 then
        task.spawn(function()
            while autobuy8 do
                local args = {
                    "Blood Kiwi"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyEventShopStock"):FireServer(unpack(args))
                task.wait(0.1)
            end
        end)
    end
end)
local ToggleBloodOwl = Tab44:AddToggle({
    Name = "Auto Buy Blood Owl", 
    Description = "Auto Buy Blood Owl", 
    Default = false 
})
local autobuy9 = false
ToggleBloodOwl:Callback(function(Value)
    autobuy9 = Value
    if autobuy9 then
        task.spawn(function()
            while autobuy9 do
                local args = {
                    "Blood Owl"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyEventShopStock"):FireServer(unpack(args))
                task.wait(0.1)
            end
        end)
    end
end)

local TabEggs = Window:MakeTab({"Auto Buy Eggs", "egg"})

local eggIDs = {
    Common = 1,
    Uncommon = 2,
    Rare = 3,
    Legendary = 4,
    Mythical = 5, -- –¥–æ–±–∞–≤–ª–µ–Ω–æ Mythical —è–π—Ü–æ
}

local function CreateEggToggle(name, id)
    local buying = false
    local toggle = TabEggs:AddToggle({
        Name = "Auto Buy " .. name .. " Egg",
        Description = "<font color='rgb(88, 101, 242)'>Auto buying " .. name .. " egg</font>",
        Default = false
    })
    toggle:Callback(function(Value)
        buying = Value
        task.spawn(function()
            while buying do
                local args = {id}
                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyPetEgg"):FireServer(unpack(args))
                task.wait(0.1)
            end
        end)
    end)
end

-- –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–π—Ü–∞
for name, id in pairs(eggIDs) do
    CreateEggToggle(name, id)
end

-------------------------------------------------
local Tab3 = Window:MakeTab({"Auto Buy Gear", "inbox"})
local Toggle1 = Tab3:AddToggle({
    Name = "Auto Buy Watering Can",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying watering can</font>",
    Default = false
})
local buying = false
Toggle1:Callback(function(Value)
    buying = Value
    task.spawn(function()
        while buying do
            local args = {
	        "Watering Can"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyGearStock"):FireServer(unpack(args))

            task.wait(0.1)
        end
    end)
end)
local Toggle1 = Tab3:AddToggle({
    Name = "Auto Buy Trowel",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying Trowel</font>",
    Default = false
})
local buying = false
Toggle1:Callback(function(Value)
    buying = Value
    task.spawn(function()
        while buying do
            local args = {
	        "Trowel"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyGearStock"):FireServer(unpack(args))

            task.wait(0.1)
        end
    end)
end)
local Toggle1 = Tab3:AddToggle({
    Name = "Auto Buy Recall Wrench",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying Trowel</font>",
    Default = false
})
local buying = false
Toggle1:Callback(function(Value)
    buying = Value
    task.spawn(function()
        while buying do
local args = {
	"Recall Wrench"
}
game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyGearStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle2 = Tab3:AddToggle({
    Name = "Auto Buy Basic Splinker",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying Basic Splinker</font>",
    Default = false
})
local buyingSplinker = false
Toggle2:Callback(function(Value)
    buyingSplinker = Value
    task.spawn(function()
        while buyingSplinker do
            local args = {
                "Basic Splinker"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyGearStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle3 = Tab3:AddToggle({
    Name = "Auto Buy Advanced Sprinkler",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying Advanced Sprinkler</font>",
    Default = false
})
local buyingAdvancedSprinkler = false
Toggle3:Callback(function(Value)
    buyingAdvancedSprinkler = Value
    task.spawn(function()
        while buyingAdvancedSprinkler do
            local args = {
                "Advanced Sprinkler"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyGearStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle4 = Tab3:AddToggle({
    Name = "Auto Buy Godly Sprinkler",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying Godly Sprinkler</font>",
    Default = false
})
local buyingGodlySprinkler = false
Toggle4:Callback(function(Value)
    buyingGodlySprinkler = Value
    task.spawn(function()
        while buyingGodlySprinkler do
            local args = {
                "Godly Sprinkler"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyGearStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle6 = Tab3:AddToggle({
    Name = "Auto Buy Master Sprinkler",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying Master Sprinkler</font>",
    Default = false
})
local buyingMasterSprinkler = false
Toggle6:Callback(function(Value)
    buyingMasterSprinkler = Value
    task.spawn(function()
        while buyingMasterSprinkler do
            local args = {
                "Master Sprinkler"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyGearStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)
local Toggle7 = Tab3:AddToggle({
    Name = "Auto Buy Favorite Tool",
    Description = "<font color='rgb(88, 101, 242)'>Auto buying Favorite Tool</font>",
    Default = false
})
local buyingFavoriteTool = false
Toggle7:Callback(function(Value)
    buyingFavoriteTool = Value
    task.spawn(function()
        while buyingFavoriteTool do
            local args = {
                "Favorite Tool"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyGearStock"):FireServer(unpack(args))
            task.wait(0.1)
        end
    end)
end)

local Tab6 = Window:MakeTab({"Auto Cosmetics", "sigma"})

-- –°—Ç–∞—Ç—É—Å—ã –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
local AutoBuyStates = {}

-- –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å –ø—É—Ç—ë–º –∏ –∏–∫–æ–Ω–∫–æ–π
local Cosmetics = {
    ["Sign Crate"] = {
        Event = "BuyCosmeticCrate",
        Logo = "rbxassetid://119380017459154" -- –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—ë
    },
    ["Cooking Pot"] = {
        Event = "BuyCosmeticItem",
        Logo = "rbxassetid://1234567891"
    },
    ["Blue Well"] = {
        Event = "BuyCosmeticItem",
        Logo = "rbxassetid://1234567892"
    },
    ["White Bench"] = {
        Event = "BuyCosmeticItem",
        Logo = "rbxassetid://1234567893"
    },
    ["Yellow Umbrella"] = {
        Event = "BuyCosmeticItem",
        Logo = "rbxassetid://1234567894"
    },
    ["Torch"] = {
        Event = "BuyCosmeticItem",
        Logo = "rbxassetid://1234567895"
    },
    ["Medium Wood Flooring"] = {
        Event = "BuyCosmeticItem",
        Logo = "rbxassetid://1234567896"
    },
    ["Wood Fence"] = {
        Event = "BuyCosmeticItem",
        Logo = "rbxassetid://1234567897"
    },
    ["Hay Bale"] = {
        Event = "BuyCosmeticItem",
        Logo = "rbxassetid://1234567898"
    }
}

-- –ê–≤—Ç–æ–ø–æ–∫—É–ø–∫–∞ –≤ —Ñ–æ–Ω–µ
for name, data in pairs(Cosmetics) do
    AutoBuyStates[name] = false

    -- –ö–Ω–æ–ø–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ –ø–æ–∫—É–ø–∫–∏
    Tab6:AddToggle({
        Name = "Auto Buy: " .. name,
        Default = false,
        Logo = data.Logo,
        Callback = function(state)
            AutoBuyStates[name] = state
            if state then
                task.spawn(function()
                    while AutoBuyStates[name] do
                        pcall(function()
                            game:GetService("ReplicatedStorage")
                                :WaitForChild("GameEvents")
                                :WaitForChild(data.Event)
                                :FireServer(name)
                        end)
                        task.wait(1)
                    end
                end)
            end
        end
    })
end

-- –°–æ–∑–¥–∞—ë–º –≤–∫–ª–∞–¥–∫—É
local Tab1 = Window:MakeTab({"Destroy", "zoomin"})

-- –ö–Ω–æ–ø–∫–∞: –£–∫—Ä–∞—Å—Ç—å —Ñ—Ä—É–∫—Ç—ã
Tab1:AddButton({"Steal Player's Fruits", function()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            local fruits = workspace:FindFirstChild(player.Name .. "_Fruits")
            if fruits then
                for _, fruit in pairs(fruits:GetChildren()) do
                    pcall(function()
                        fruit.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                    end)
                end
            end
        end
    end
end})

-- –ö–Ω–æ–ø–∫–∞: –°–ª–æ–º–∞—Ç—å –ø–æ–ª—è
Tab1:AddButton({"Destroy Player's Plots", function()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            local fields = workspace:FindFirstChild(player.Name .. "_Fields")
            if fields then
                for _, field in pairs(fields:GetChildren()) do
                    pcall(function()
                        field:Destroy()
                    end)
                end
            end
        end
    end
end})

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local UserInputService = game:GetService("UserInputService")


-- Create "Settings" tab
local SettingsTab = Window:MakeTab({"Settings", "settings"})

-- 1. Anti AFK
local antiAfkEnabled = false
local antiAfkConnection

SettingsTab:AddToggle({
    Name = "Anti AFK",
    Description = "Enable/Disable AFK protection",
    Default = false,
    Callback = function(state)
        antiAfkEnabled = state
        if state then
            for _, conn in ipairs(getconnections(player.Idled)) do
                conn:Disable()
            end
            antiAfkConnection = player.Idled:Connect(function()
                local vu = game:GetService("VirtualUser")
                vu:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
                task.wait(1)
                vu:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
            end)
        else
            if antiAfkConnection then
                antiAfkConnection:Disconnect()
                antiAfkConnection = nil
            end
        end
    end
})

-- 2. Infinite Jump
local infiniteJumpEnabled = false
SettingsTab:AddToggle({
    Name = "Infinite Jump",
    Description = "Allows jumping while in air",
    Default = false,
    Callback = function(state)
        infiniteJumpEnabled = state
    end
})

UserInputService.JumpRequest:Connect(function()
    if infiniteJumpEnabled then
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

-- 3. Speed Boost
local speedBoostEnabled = false
local defaultWalkSpeed = 16
SettingsTab:AddToggle({
    Name = "Speed Boost",
    Description = "Increase player walking speed",
    Default = false,
    Callback = function(state)
        speedBoostEnabled = state
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = speedBoostEnabled and 50 or defaultWalkSpeed
        end
    end
})

-- 4. High Jump
local highJumpEnabled = false
local defaultJumpPower = 50
SettingsTab:AddToggle({
    Name = "High Jump",
    Description = "Increase jump power",
    Default = false,
    Callback = function(state)
        highJumpEnabled = state
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.JumpPower = highJumpEnabled and 150 or defaultJumpPower
        end
    end
})

-- 5. No Clip
local noClipEnabled = false
SettingsTab:AddToggle({
    Name = "No Clip",
    Description = "Pass through walls",
    Default = false,
    Callback = function(state)
        noClipEnabled = state
    end
})

RunService.Stepped:Connect(function()
    if noClipEnabled and player.Character then
        for _, part in pairs(player.Character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    elseif player.Character then
        for _, part in pairs(player.Character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end)

-- 6. Full Bright
local fullBrightEnabled = false
local originalLightingSettings = {
    Brightness = Lighting.Brightness,
    ClockTime = Lighting.ClockTime,
    FogEnd = Lighting.FogEnd,
    GlobalShadows = Lighting.GlobalShadows
}

SettingsTab:AddToggle({
    Name = "Full Bright",
    Description = "Maximum brightness and disables shadows",
    Default = false,
    Callback = function(state)
        fullBrightEnabled = state
        if state then
            Lighting.Brightness = 5
            Lighting.ClockTime = 14
            Lighting.FogEnd = 100000
            Lighting.GlobalShadows = false
        else
            Lighting.Brightness = originalLightingSettings.Brightness
            Lighting.ClockTime = originalLightingSettings.ClockTime
            Lighting.FogEnd = originalLightingSettings.FogEnd
            Lighting.GlobalShadows = originalLightingSettings.GlobalShadows
        end
    end
})

-- 7. Remove Fog
local removeFogEnabled = false
SettingsTab:AddToggle({
    Name = "Remove Fog",
    Description = "Removes the fog effect",
    Default = false,
    Callback = function(state)
        removeFogEnabled = state
        Lighting.FogEnd = removeFogEnabled and 1e10 or originalLightingSettings.FogEnd
    end
})

-- 8. Teleport to Mouse
SettingsTab:AddButton({
    Name = "Teleport to Mouse",
    Description = "Teleports player to the mouse position",
    Callback = function()
        local mouse = player:GetMouse()
        local character = player.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            character.HumanoidRootPart.CFrame = CFrame.new(mouse.Hit.X, mouse.Hit.Y + 3, mouse.Hit.Z)
        end
    end
})

local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

local flyEnabled = false
local flySpeed = 50
local flyConnection

-- –§—É–Ω–∫—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—ë—Ç–æ–º --
local function startFly()
    local velocity = Instance.new("BodyVelocity")
    velocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
    velocity.Velocity = Vector3.new(0, 0, 0)
    velocity.Parent = rootPart

    flyConnection = RunService.Heartbeat:Connect(function()
        local moveDir = Vector3.new(0, 0, 0)
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            moveDir = moveDir + workspace.CurrentCamera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            moveDir = moveDir - workspace.CurrentCamera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveDir = moveDir - workspace.CurrentCamera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveDir = moveDir + workspace.CurrentCamera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
            moveDir = moveDir + Vector3.new(0, 1, 0)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
            moveDir = moveDir - Vector3.new(0, 1, 0)
        end

        velocity.Velocity = moveDir.Unit * flySpeed
        if moveDir.Magnitude == 0 then
            velocity.Velocity = Vector3.new(0, 0, 0)
        end
    end)
end

local function stopFly()
    if flyConnection then
        flyConnection:Disconnect()
        flyConnection = nil
    end
    if rootPart:FindFirstChildWhichIsA("BodyVelocity") then
        rootPart:FindFirstChildWhichIsA("BodyVelocity"):Destroy()
    end
end

-- –¢–≤–æ–π SettingsTab:AddToggle –ø—Ä–∏–º–µ—Ä --
SettingsTab:AddToggle({
    Name = "Fly",
    Description = "Toggle flying mode",
    Default = false,
    Callback = function(state)
        flyEnabled = state
        if flyEnabled then
            startFly()
        else
            stopFly()
        end
    end
})

-- –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å —á—Ç–æ-—Ç–æ —Ç–∏–ø–∞: --
SettingsTab:AddSlider({
    Name = "Fly Speed",
    Min = 10,
    Max = 200,
    Default = flySpeed,
    Callback = function(value)
        flySpeed = value
    end
})


-- 10. Auto Respawn
local autoRespawnEnabled = false
SettingsTab:AddToggle({
    Name = "Auto Respawn",
    Description = "Automatically respawn after death",
    Default = false,
    Callback = function(state)
        autoRespawnEnabled = state
    end
})

player.CharacterAdded:Connect(function(character)
    if autoRespawnEnabled then
        local humanoid = character:WaitForChild("Humanoid")
        humanoid.Died:Connect(function()
            task.wait(3)
            player:LoadCharacter()
        end)
    end
end)


local Tab5 = Window:MakeTab({"Credits", "box"})

Tab5:AddDiscordInvite({
    Name = "Mauscripts",
    Description = "Join Telegram For more scripts",
    Logo = "rbxassetid://116318625324253",
    Invite = "https://t.me/Mauscripts",
})

Tab5:AddDiscordInvite({
    Name = "TikTok",
    Description = "Follow on TikTok",
    Logo = "rbxassetid://137095075839383",
    Invite = "https://www.tiktok.com/@nemaus"
})

Tab5:AddDiscordInvite({
    Name = "YouTube",
    Description = "Subscribe on YouTube",
    Logo = "rbxassetid://119380017459154",
    Invite = "https://www.youtube.com/@neemaus"
})

Tab5:AddDiscordInvite({
    Name = "Telegram Bot",
    Description = "Open Telegram Bot",
    Logo = "rbxassetid://75350973277873",
    Invite = "https://t.me/TheRobloxBypass_Bot"
})
